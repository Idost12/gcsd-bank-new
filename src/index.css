@tailwind base;
@tailwind components;
@tailwind utilities;

/* Animated Gradient Mesh Background */
body {
  position: relative;
  overflow-x: hidden;
  background: transparent;
}

/* Root gradient mesh that fills the entire viewport */
#root {
  position: relative;
  min-height: 100vh;
}

#root::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -2;
  pointer-events: none;
  background: 
    linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #4facfe 75%, #00f2fe 100%);
  background-size: 400% 400%;
  animation: gradientMesh 15s ease infinite;
}

/* Dark theme gradient mesh */
.dark #root::before {
  background: 
    linear-gradient(135deg, #1e3a8a 0%, #312e81 25%, #581c87 50%, #0c4a6e 75%, #064e3b 100%);
  background-size: 400% 400%;
  animation: gradientMesh 20s ease infinite;
}

/* Neon theme gradient mesh */
.neon-theme #root::before {
  background: 
    linear-gradient(135deg, #ea580c 0%, #dc2626 25%, #c026d3 50%, #f59e0b 75%, #fb923c 100%);
  background-size: 400% 400%;
  animation: gradientMesh 18s ease infinite;
}

/* Secondary gradient layer for depth */
#root::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  pointer-events: none;
  background: 
    radial-gradient(circle at 20% 30%, rgba(99, 102, 241, 0.4), transparent 50%),
    radial-gradient(circle at 80% 70%, rgba(236, 72, 153, 0.4), transparent 50%),
    radial-gradient(circle at 40% 80%, rgba(34, 211, 238, 0.4), transparent 50%),
    radial-gradient(circle at 90% 20%, rgba(168, 85, 247, 0.4), transparent 50%);
  background-size: 600px 600px, 800px 800px, 500px 500px, 700px 700px;
  animation: floatMesh 25s ease-in-out infinite;
  opacity: 0.7;
}

.dark #root::after {
  background: 
    radial-gradient(circle at 20% 30%, rgba(79, 70, 229, 0.3), transparent 50%),
    radial-gradient(circle at 80% 70%, rgba(236, 72, 153, 0.3), transparent 50%),
    radial-gradient(circle at 40% 80%, rgba(14, 165, 233, 0.3), transparent 50%),
    radial-gradient(circle at 90% 20%, rgba(139, 92, 246, 0.3), transparent 50%);
  background-size: 600px 600px, 800px 800px, 500px 500px, 700px 700px;
  animation: floatMesh 30s ease-in-out infinite;
  opacity: 0.6;
}

.neon-theme #root::after {
  background: 
    radial-gradient(circle at 20% 30%, rgba(249, 115, 22, 0.3), transparent 50%),
    radial-gradient(circle at 80% 70%, rgba(220, 38, 38, 0.3), transparent 50%),
    radial-gradient(circle at 40% 80%, rgba(192, 38, 211, 0.3), transparent 50%),
    radial-gradient(circle at 90% 20%, rgba(245, 158, 11, 0.3), transparent 50%);
  background-size: 600px 600px, 800px 800px, 500px 500px, 700px 700px;
  animation: floatMesh 28s ease-in-out infinite;
  opacity: 0.5;
}

/* Gradient mesh animation */
@keyframes gradientMesh {
  0%, 100% { 
    background-position: 0% 50%;
  }
  25% { 
    background-position: 50% 100%;
  }
  50% { 
    background-position: 100% 50%;
  }
  75% { 
    background-position: 50% 0%;
  }
}

/* Floating mesh animation */
@keyframes floatMesh {
  0%, 100% { 
    transform: translate(0, 0) scale(1);
    background-position: 0% 0%, 100% 100%, 50% 50%, 25% 75%;
  }
  25% { 
    transform: translate(30px, -30px) scale(1.05);
    background-position: 25% 25%, 75% 75%, 75% 25%, 50% 50%;
  }
  50% { 
    transform: translate(-20px, -60px) scale(0.95);
    background-position: 50% 50%, 50% 50%, 25% 75%, 75% 25%;
  }
  75% { 
    transform: translate(-40px, -20px) scale(1.02);
    background-position: 75% 75%, 25% 25%, 50% 50%, 0% 100%;
  }
}

/* Liquid Glass (Glassmorphism) Effects */
.glass {
  background: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(12px) saturate(180%);
  -webkit-backdrop-filter: blur(12px) saturate(180%);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
}

.dark .glass {
  background: rgba(15, 23, 42, 0.4);
  backdrop-filter: blur(12px) saturate(180%);
  -webkit-backdrop-filter: blur(12px) saturate(180%);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.3);
}

.neon-theme .glass {
  background: rgba(42, 42, 42, 0.5);
  backdrop-filter: blur(12px) saturate(180%);
  -webkit-backdrop-filter: blur(12px) saturate(180%);
  border: 1px solid rgba(249, 115, 22, 0.4);
  box-shadow: 0 8px 32px 0 rgba(249, 115, 22, 0.2);
}

/* Glass button variant */
.glass-btn {
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px) saturate(150%);
  -webkit-backdrop-filter: blur(10px) saturate(150%);
  border: 1px solid rgba(255, 255, 255, 0.4);
  box-shadow: 0 4px 16px 0 rgba(31, 38, 135, 0.2);
  transition: all 0.3s ease;
}

.glass-btn:hover {
  background: rgba(255, 255, 255, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.5);
  box-shadow: 0 8px 24px 0 rgba(31, 38, 135, 0.3);
  transform: translateY(-2px);
}

.dark .glass-btn {
  background: rgba(30, 41, 59, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.15);
  box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.4);
}

.dark .glass-btn:hover {
  background: rgba(30, 41, 59, 0.7);
  border: 1px solid rgba(255, 255, 255, 0.25);
  box-shadow: 0 8px 24px 0 rgba(0, 0, 0, 0.5);
}

.neon-theme .glass-btn {
  background: rgba(42, 42, 42, 0.6);
  border: 1px solid rgba(249, 115, 22, 0.5);
  box-shadow: 0 4px 16px 0 rgba(249, 115, 22, 0.3);
}

.neon-theme .glass-btn:hover {
  background: rgba(42, 42, 42, 0.8);
  border: 1px solid rgba(251, 146, 60, 0.6);
  box-shadow: 0 8px 24px 0 rgba(249, 115, 22, 0.4);
}

/* Glass card variant */
.glass-card {
  background: rgba(255, 255, 255, 0.12);
  backdrop-filter: blur(16px) saturate(200%);
  -webkit-backdrop-filter: blur(16px) saturate(200%);
  border: 1px solid rgba(255, 255, 255, 0.25);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.1);
}

.dark .glass-card {
  background: rgba(15, 23, 42, 0.35);
  border: 1px solid rgba(255, 255, 255, 0.12);
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.35);
}

.neon-theme .glass-card {
  background: rgba(42, 42, 42, 0.45);
  border: 1px solid rgba(249, 115, 22, 0.35);
  box-shadow: 0 8px 32px 0 rgba(249, 115, 22, 0.15);
}

/* Mobile Enhancements */
@media (max-width: 768px) {
  /* Swipe gestures for mobile */
  .swipe-container {
    touch-action: pan-y;
    -webkit-overflow-scrolling: touch;
  }
  
  /* Pull to refresh indicator */
  .pull-to-refresh {
    position: relative;
    overflow: hidden;
  }
  
  /* Haptic feedback simulation */
  .haptic-feedback:active {
    transform: scale(0.98);
    transition: transform 0.1s ease;
  }
  
  /* Reduced motion for performance */
  @media (prefers-reduced-motion: reduce) {
    body::before {
      animation: none;
    }
    
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
}

/* Enhanced hover effects */
.hover-lift {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.dark .hover-lift:hover {
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
}

.neon-theme .hover-lift:hover {
  box-shadow: 0 10px 25px rgba(249, 115, 22, 0.2);
}

/* Smooth transitions for all interactive elements */
button, input, select, textarea, .clickable {
  transition: all 0.2s ease;
}

/* small helpers */
.badge{
  @apply inline-flex items-center px-2 py-0.5 rounded-md text-xs font-medium bg-slate-100 text-slate-700;
}

/* Smooth scrolling for all containers */
* {
  scroll-behavior: smooth;
}

/* Mobile optimizations */
@media (max-width: 768px) {
  /* Ensure proper viewport handling */
  html {
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
  }
  
  /* Better touch targets */
  button, input, select, textarea {
    min-height: 44px;
    min-width: 44px;
  }
  
  /* Prevent zoom on input focus */
  input, select, textarea {
    font-size: 16px;
  }
  
  /* Better spacing for mobile */
  .mobile-padding {
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  /* Stack elements vertically on mobile */
  .mobile-stack {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  /* Full width on mobile */
  .mobile-full {
    width: 100%;
  }
}

/* Custom scrollbar styling */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.3);
}

.dark ::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.2);
}

.dark ::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.3);
}

/* Fix dropdown/select visibility in all modes */
select {
  background-color: white;
  color: black;
}

select option {
  background-color: white;
  color: black;
}

.dark select {
  background-color: #1e293b;
  color: #f1f5f9;
}

.dark select option {
  background-color: #1e293b;
  color: #f1f5f9;
}

/* Neon mode - force dark styling for all selects */
body:has(.neon-theme) select,
.neon-theme select {
  background-color: #2a2a2a !important;
  color: #fed7aa !important;
  border-color: #f97316 !important;
}

body:has(.neon-theme) select option,
.neon-theme select option {
  background-color: #2a2a2a !important;
  color: #fed7aa !important;
}

/* Additional neon theme fixes */
body:has(.neon-theme) input,
.neon-theme input {
  background-color: #2a2a2a !important;
  color: #fed7aa !important;
  border-color: #f97316 !important;
}

body:has(.neon-theme) input::placeholder,
.neon-theme input::placeholder {
  color: #fed7aa !important;
  opacity: 0.6;
}

/* Neon theme button fixes */
body:has(.neon-theme) button,
.neon-theme button {
  border-color: #f97316 !important;
}

body:has(.neon-theme) button:hover,
.neon-theme button:hover {
  background-color: #3a3a3a !important;
  border-color: #fb923c !important;
}

/* Neon theme text visibility */
body:has(.neon-theme) .text-slate-600,
.neon-theme .text-slate-600 {
  color: #fed7aa !important;
}

body:has(.neon-theme) .text-slate-500,
.neon-theme .text-slate-500 {
  color: #fed7aa !important;
  opacity: 0.8;
}

body:has(.neon-theme) .opacity-70,
.neon-theme .opacity-70 {
  opacity: 0.9 !important;
}

/* Ensure inputs are visible in all modes */
input::placeholder {
  opacity: 0.5;
}

.dark input::placeholder {
  opacity: 0.6;
}

/* Fix button visibility */
button:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}
